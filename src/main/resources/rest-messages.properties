# ChangeFeedToSQLForm
ChangeFeedToSQLForm._templates.default.title=Create a CDC to SQL streaming job
ChangeFeedToSQLForm.targetUrl._prompt=Target database URL
ChangeFeedToSQLForm.targetUrl._placeholder=jdbc:postgresql://localhost:26257/target?sslmode=disable
ChangeFeedToSQLForm.targetUsername._prompt=Target database login name
ChangeFeedToSQLForm.targetUsername._placeholder=root
ChangeFeedToSQLForm.targetPassword._prompt=Target database login password
ChangeFeedToSQLForm.targetPassword._placeholder=(none)
ChangeFeedToSQLForm.subscriberId._prompt=Unique subscriber ID
ChangeFeedToSQLForm.subscriberId._placeholder=
ChangeFeedToSQLForm.chunkSize._prompt=Items to read before writing
ChangeFeedToSQLForm.chunkSize._placeholder=32
ChangeFeedToSQLForm.pollTimeoutSeconds._prompt=Read timeout in seconds before ending
ChangeFeedToSQLForm.pollTimeoutSeconds._placeholder=300
ChangeFeedToSQLForm.createQuery._prompt=Target database table create statement or DDL file path
ChangeFeedToSQLForm.createQuery._placeholder=nodelocal:products-ddl.sql
ChangeFeedToSQLForm.insertQuery._prompt=Target database insert/upsert statement (use named parameters prefixed with colon)
ChangeFeedToSQLForm.insertQuery._placeholder=UPSERT INTO products(id,inventory,name,price,sku) VALUES (:id,:inventory,:name,:price,:sku)
ChangeFeedToSQLForm.deleteQuery._prompt=Target database delete statement (use named parameters prefixed with colon)
ChangeFeedToSQLForm.deleteQuery._placeholder=DELETE FROM products where id=:id
ChangeFeedToSQLForm.concurrency._prompt=Concurrency level for readers
ChangeFeedToSQLForm.concurrency._placeholder=1
ChangeFeedToSQLForm.table._prompt=Table name for generating create and insert SQL statements
ChangeFeedToSQLForm.table._placeholder=product

# FlatToCSVForm
FlatToCSVForm.concurrency._prompt=Concurrency level for readers
FlatToCSVForm.concurrency._placeholder=1
FlatToCSVForm.sourceFile._prompt=Source file path
FlatToCSVForm.sourceFile._placeholder=nodelocal:products.txt
FlatToCSVForm.schemaFile._prompt=Schema file path
FlatToCSVForm.schemaFile._placeholder=nodelocal:products-schema.json
FlatToCSVForm.chunkSize._prompt=Items to read before writing
FlatToCSVForm.chunkSize._placeholder=32
FlatToCSVForm.linesToSkip._prompt=Lines to skip initially
FlatToCSVForm.linesToSkip._placeholder=0
FlatToCSVForm.awsAccessKey._prompt=AWS access key for s3: prefixed paths 
FlatToCSVForm.awsAccessKey._placeholder=AWS_ACCESS_KEY_ID
FlatToCSVForm.awsSecretAccessKey._prompt=AWS secret key for s3: prefixed paths
FlatToCSVForm.awsSecretAccessKey._placeholder=AWS_SECRET_ACCESS_KEY
FlatToCSVForm.awsRegion._prompt=AWS region for s3: prefixed paths
FlatToCSVForm.awsRegion._placeholder=AWS_DEFAULT_REGION
FlatToCSVForm.gcsAuth._prompt=GCS auth method either specified (base64 json key) or implicit (env variable GOOGLE_APPLICATION_CREDENTIALS)
FlatToCSVForm.gcsAuth._placeholder=specified
FlatToCSVForm.gcsCredentials._prompt=GCS base64 encoded json key
FlatToCSVForm.gcsCredentials._placeholder=

# FlatToSQLForm
FlatToSQLForm.targetUrl._prompt=Target database URL
FlatToSQLForm.targetUrl._placeholder=jdbc:postgresql://localhost:26257/target?sslmode=disable
FlatToSQLForm.targetUsername._prompt=Target database login name
FlatToSQLForm.targetUsername._placeholder=root
FlatToSQLForm.targetPassword._prompt=Target database login password
FlatToSQLForm.targetPassword._placeholder=(none)
FlatToSQLForm.concurrency._prompt=Concurrency level for readers
FlatToSQLForm.concurrency._placeholder=1
FlatToSQLForm.sourceFile._prompt=Source file path
FlatToSQLForm.sourceFile._placeholder=nodelocal:customers-data.csv
FlatToSQLForm.schemaFile._prompt=Source file schema path
FlatToSQLForm.schemaFile._placeholder=nodelocal:customers-schema.json
FlatToSQLForm.schema._prompt=Source file schema
FlatToSQLForm.schema._placeholder=Use schema path or embedded schema (this)
FlatToSQLForm.chunkSize._prompt=Items to read before writing
FlatToSQLForm.chunkSize._placeholder=32
FlatToSQLForm.linesToSkip._prompt=Lines to skip initially
FlatToSQLForm.linesToSkip._placeholder=0
FlatToSQLForm.awsAccessKey._prompt=AWS access key for s3: prefixed paths 
FlatToSQLForm.awsAccessKey._placeholder=AWS_ACCESS_KEY_ID
FlatToSQLForm.awsSecretAccessKey._prompt=AWS secret key for s3: prefixed paths
FlatToSQLForm.awsSecretAccessKey._placeholder=AWS_SECRET_ACCESS_KEY
FlatToSQLForm.awsRegion._prompt=AWS region for s3: prefixed paths
FlatToSQLForm.awsRegion._placeholder=AWS_DEFAULT_REGION
FlatToSQLForm.gcsAuth._prompt=GCS auth method either specified (base64 json key) or implicit (env variable GOOGLE_APPLICATION_CREDENTIALS)
FlatToSQLForm.gcsAuth._placeholder=specified
FlatToSQLForm.gcsCredentials._prompt=GCS base64 encoded json key
FlatToSQLForm.gcsCredentials._placeholder=
FlatToSQLForm.createQuery._prompt=Target database table create statement or DDL file path
FlatToSQLForm.createQuery._placeholder=nodelocal:products-ddl.sql
FlatToSQLForm.insertQuery._prompt=Target database insert/upsert statement (use named parameters prefixed with colon)
FlatToSQLForm.insertQuery._placeholder=upsert into customer(c_id, c_d_id, c_w_id, c_first, c_middle, c_last, c_street_1, c_street_2, c_city, c_state, c_zip, c_phone, c_since, c_credit, c_credit_lim, c_discount, c_balance, c_ytd_payment, c_payment_cnt, c_delivery_cnt, c_data) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

# KafkaToSQLForm
KafkaToSQLForm.targetUrl._prompt=Target database URL
KafkaToSQLForm.targetUrl._placeholder=jdbc:postgresql://localhost:26257/target?sslmode=disable
KafkaToSQLForm.targetUsername._prompt=Target database login name
KafkaToSQLForm.targetUsername._placeholder=root
KafkaToSQLForm.targetPassword._prompt=Target database login password
KafkaToSQLForm.targetPassword._placeholder=(none)
KafkaToSQLForm.concurrency._prompt=Concurrency level for readers
KafkaToSQLForm.concurrency._placeholder=1
KafkaToSQLForm.chunkSize._prompt=Items to read before writing
KafkaToSQLForm.chunkSize._placeholder=32
KafkaToSQLForm.linesToSkip._prompt=Lines to skip initially
KafkaToSQLForm.linesToSkip._placeholder=0
KafkaToSQLForm.createQuery._prompt=Target database table create statement or DDL file path
KafkaToSQLForm.createQuery._placeholder=nodelocal:products-ddl.sql
KafkaToSQLForm.insertQuery._prompt=Target database insert/upsert statement (use named parameters prefixed with colon)
KafkaToSQLForm.insertQuery._placeholder=upsert into customer(c_id, c_d_id, c_w_id, c_first, c_middle, c_last, c_street_1, c_street_2, c_city, c_state, c_zip, c_phone, c_since, c_credit, c_credit_lim, c_discount, c_balance, c_ytd_payment, c_payment_cnt, c_delivery_cnt, c_data) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
KafkaToSQLForm.pollTimeoutSeconds._prompt=Read timeout in seconds before ending
KafkaToSQLForm.pollTimeoutSeconds._placeholder=300
KafkaToSQLForm.name._prompt=Read timeout in seconds before ending
KafkaToSQLForm.name._placeholder=300
KafkaToSQLForm.topic._prompt=Topic name to manually assign to the consumer (table name)
KafkaToSQLForm.topic._placeholder=product
KafkaToSQLForm.bootstrapServers._prompt=List of host/port pairs to use for establishing the initial connection to the Kafka cluster
KafkaToSQLForm.bootstrapServers._placeholder=localhost:9092
KafkaToSQLForm.groupId._prompt=Unique string that identifies the consumer group this consumer belongs to
KafkaToSQLForm.groupId._placeholder=pipeline
KafkaToSQLForm.saveOffsets._prompt=Enables the consumer offset to be persisted for restart purposes
KafkaToSQLForm.saveOffsets._placeholder=true

# SQLtoCSVForm
SQLtoCSVForm.sourceUrl._prompt=Source database URL
SQLtoCSVForm.sourceUrl._placeholder=jdbc:postgresql://localhost:26257/source?sslmode=disable
SQLtoCSVForm.sourceUsername._prompt=Source database login name
SQLtoCSVForm.sourceUsername._placeholder=root
SQLtoCSVForm.sourcePassword._prompt=Source database login password
SQLtoCSVForm.sourcePassword._placeholder=(none)
SQLtoCSVForm.concurrency._prompt=Concurrency level for readers
SQLtoCSVForm.concurrency._placeholder=1
SQLtoCSVForm.chunkSize._prompt=Items to read before writing
SQLtoCSVForm.chunkSize._placeholder=32
SQLtoCSVForm.linesToSkip._prompt=Lines to skip initially
SQLtoCSVForm.linesToSkip._placeholder=0
SQLtoCSVForm.selectClause._prompt=Select clause part of the keyset pagination query
SQLtoCSVForm.selectClause._placeholder=SELECT id,inventory,name,price,sku
SQLtoCSVForm.fromClause._prompt=From clause part of the keyset pagination query
SQLtoCSVForm.fromClause._placeholder=FROM products
SQLtoCSVForm.whereClause._prompt=Where clause part of the keyset pagination query
SQLtoCSVForm.whereClause._placeholder=WHERE 1=1
SQLtoCSVForm.sortKeys._prompt=Sort keys for the pagination query (use PK order)
SQLtoCSVForm.sortKeys._placeholder=id
SQLtoCSVForm.createQuery._prompt=Target database table create statement or DDL file path
SQLtoCSVForm.createQuery._placeholder=nodelocal:products-ddl.sql
SQLtoCSVForm.importQuery._prompt=Import query to use in CockroachDB
SQLtoCSVForm.importQuery._placeholder=IMPORT INTO products(id,inventory,name,price,sku) CSV DATA ('http://localhost:8090/sql2csv?params=nodelocal:products-job.json')

# SQLtoSQLForm
SQLtoSQLForm.sourceUrl._prompt=Source database URL
SQLtoSQLForm.sourceUrl._placeholder=jdbc:postgresql://localhost:26257/source?sslmode=disable
SQLtoSQLForm.sourceUsername._prompt=Source database login name
SQLtoSQLForm.sourceUsername._placeholder=root
SQLtoSQLForm.sourcePassword._prompt=Source database login password
SQLtoSQLForm.sourcePassword._placeholder=(none)
SQLtoSQLForm.targetUrl._prompt=Target database URL
SQLtoSQLForm.targetUrl._placeholder=jdbc:postgresql://localhost:26257/target?sslmode=disable
SQLtoSQLForm.targetUsername._prompt=Target database login name
SQLtoSQLForm.targetUsername._placeholder=root
SQLtoSQLForm.targetPassword._prompt=Target database login password
SQLtoSQLForm.targetPassword._placeholder=(none)
SQLtoSQLForm.concurrency._prompt=Concurrency level for readers
SQLtoSQLForm.concurrency._placeholder=1
SQLtoSQLForm.chunkSize._prompt=Items to read before writing
SQLtoSQLForm.chunkSize._placeholder=32
SQLtoSQLForm.pageSize._prompt=Source query page size
SQLtoSQLForm.pageSize._placeholder=32
SQLtoSQLForm.linesToSkip._prompt=Lines to skip initially
SQLtoSQLForm.linesToSkip._placeholder=0
SQLtoSQLForm.selectClause._prompt=Select clause part of the keyset pagination query
SQLtoSQLForm.selectClause._placeholder=SELECT *
SQLtoSQLForm.fromClause._prompt=From clause part of the keyset pagination query
SQLtoSQLForm.fromClause._placeholder=FROM customer
SQLtoSQLForm.whereClause._prompt=Where clause part of the keyset pagination query
SQLtoSQLForm.whereClause._placeholder=WHERE 1=1
SQLtoSQLForm.sortKeys._prompt=Sort keys for the pagination query (use PK order)
SQLtoSQLForm.sortKeys._placeholder=c_w_id ASC, c_d_id ASC, c_id ASC
SQLtoSQLForm.createQuery._prompt=Target database table create statement or DDL file path
SQLtoSQLForm.createQuery._placeholder=nodelocal:customers-ddl.sql
SQLtoSQLForm.insertQuery._prompt=Insert/Upsert query to use for target database
SQLtoSQLForm.insertQuery._placeholder=upsert into customer(c_id, c_d_id, c_w_id) VALUES (?,?,?)
SQLtoSQLForm.table._prompt=Table name for auto-generating create and insert SQL statements
SQLtoSQLForm.table._placeholder=customer


